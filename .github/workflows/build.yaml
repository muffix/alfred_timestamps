name: build

on: [push, pull_request]

env:
  RUSTFLAGS: --deny warnings
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toolchain: [stable, beta, nightly]

    steps:
    - uses: actions/checkout@v2

    - uses: articulate/actions-markdownlint@v1

    - name: Add dependencies
      run: |
        sudo apt-get install libxcb-shape0-dev libxcb-xfixes0-dev

    - name: Setup Rust
      run: |
        rustup set profile default
        rustup toolchain install ${{ matrix.toolchain }}
        rustup override set ${{ matrix.toolchain }}

    - name: Rustfmt
      run: cargo fmt -- --check

    - name: Clippy
      run: cargo clippy --workspace --all-targets

    - name: Test
      run: cargo test --workspace

  check-version:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Calculate version from tag
        id: version
        run: echo "::set-output name=value::${GITHUB_REF#refs/tags/}"

      - name: Check tag against package versions
        run: |
          grep '^version = "${{ steps.version.outputs.value }}"$' Cargo.toml

  release:
    needs: check-version
    runs-on: macos-latest

    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Rust
        run: |
          rustup set profile minimal
          rustup toolchain install stable
          rustup override set stable
          rustup target add ${{ matrix.target }}

      - uses: extractions/setup-crate@v1
        with:
          owner: rossmacarthur
          name: powerpack

      - name: Calculate version from tag
        id: version
        run: echo "::set-output name=value::${GITHUB_REF#refs/tags/}"

      - name: Archive
        id: archive
        run: |
          archive=alfred_timestamps-${{ steps.version.outputs.value }}-${{ matrix.target }}.alfredworkflow
          powerpack package --target ${{ matrix.target }}
          mv target/workflow/alfred_timestamps.alfredworkflow "$archive"
          echo "::set-output name=path::$archive"

      - uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ steps.archive.outputs.path }}
